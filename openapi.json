{
  "openapi": "3.0.0",
  "info": {
    "title": "Goal Tracker API",
    "version": "2.0.0",
    "description": "API for managing users, goals, and authentication. This version includes breaking changes from v1.0.0.",
    "x-api-changes": {
      "breaking": [
        "Removed /signup endpoint (use /auth/register instead)",
        "Changed response format for /goal/{goalId}",
        "Added required 'status' field to goal creation"
      ],
      "deprecated": [
        "/user/{userId}/drafts endpoint will be removed in v3.0.0"
      ]
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        },
        "required": ["error"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request - invalid or missing data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "userExists": {
                "value": {
                  "error": "User already exists"
                }
              },
              "missingFields": {
                "value": {
                  "error": "Email, password, and name are required"
                }
              },
              "invalidEmail": {
                "value": {
                  "error": "Invalid email format"
                }
              },
              "invalidPassword": {
                "value": {
                  "error": "Password must be at least 8 characters"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - invalid or missing authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "invalidCredentials": {
                "value": {
                  "error": "Invalid email or password"
                }
              },
              "missingToken": {
                "value": {
                  "error": "No authorization header"
                }
              },
              "invalidToken": {
                "value": {
                  "error": "Invalid token"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "userNotFound": {
                "value": {
                  "error": "User not found"
                }
              },
              "goalNotFound": {
                "value": {
                  "error": "Goal not found"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "examples": {
              "serverError": {
                "value": {
                  "error": "Failed to process request"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with email, password, name, and optional avatar.",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "name"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "minLength": 1 },
                  "name": { "type": "string" },
                  "avatar": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "email": { "type": "string" },
                    "name": { "type": "string" },
                    "avatarUrl": { "type": "string", "nullable": true }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Authenticates a user with email and password.",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "name": { "type": "string" },
                    "avatar": { "type": "string", "nullable": true }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get current user",
        "description": "Returns the current user's information based on the JWT token.",
        "operationId": "getCurrentUser",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "email": { "type": "string" },
                    "name": { "type": "string" },
                    "avatarUrl": { "type": "string", "nullable": true }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "deprecated": true,
        "summary": "Signup user (legacy) - DEPRECATED",
        "description": "This endpoint is deprecated. Use /auth/register instead. Will be removed in v3.0.0.",
        "operationId": "signupUser",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "email"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "avatar": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "avatarUrl": { "type": "string", "nullable": true }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields or invalid data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns a list of all users.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" },
                      "email": { "type": "string" },
                      "avatarUrl": { "type": "string", "nullable": true }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{userId}/drafts": {
      "get": {
        "deprecated": true,
        "summary": "Get user drafts - DEPRECATED",
        "description": "This endpoint is deprecated and will be removed in v3.0.0. Use /goals?status=draft instead.",
        "operationId": "getUserDrafts",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User drafts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/goal": {
      "post": {
        "summary": "Create goal",
        "description": "Creates a new goal. Note: 'status' field is now required.",
        "operationId": "createGoal",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "content", "status"],
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "status": { 
                    "type": "string",
                    "enum": ["draft", "in_progress", "completed"],
                    "description": "Required in v2.0.0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Goal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/feed/goals": {
      "get": {
        "summary": "Get all goals (feed)",
        "description": "Returns a list of goals with optional filtering.",
        "operationId": "getGoalsFeed",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of goals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "title": { "type": "string" },
                      "content": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/goal/{goalId}": {
      "get": {
        "summary": "Get goal by ID",
        "description": "Returns details of a specific goal.",
        "operationId": "getGoalById",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goal details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" },
                    "tasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "title": { "type": "string" },
                          "description": { "type": "string" },
                          "status": { "type": "string" }
                        }
                      }
                    },
                    "status": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Goal not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete goal",
        "description": "Deletes a goal and its related tasks.",
        "operationId": "deleteGoal",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Goal deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Goal not found or cannot be deleted"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/publish/goals/{goalId}": {
      "put": {
        "summary": "Publish/Unpublish goal",
        "description": "Toggles the published state of a goal.",
        "operationId": "togglePublishGoal",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Goal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Goal not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/uploads/avatars/{filename}": {
      "get": {
        "summary": "Get avatar",
        "description": "Serves uploaded avatar images.",
        "operationId": "getAvatar",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar image",
            "content": {
              "image/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Avatar not found"
          }
        }
      }
    },
    "/user/{userId}": {
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user and all associated data (goals, tasks, etc.). No authentication required.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User and all associated data deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  }
} 